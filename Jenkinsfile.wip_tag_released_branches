// Curl site

@Library('genome') _
def senseislack = new org.klick.SenseiSlack()

node('sensei_build') {

  try {

    def check_URL = 'https://genome.klic2k.com/'
    def warnings = []
    def sha = do_curl(check_URL, warnings)
    echo "GOT SHA: ${sha}"
    echo "warnings: ${warnings}"
    
    // def msg = [ subject: 'hi', body: 'there', channel: 'jenkins-dev-tests' ]
    // senseislack.post_success(msg)
  }
  catch(err) {
    echo "FAILED: ${err}"
    currentBuild.result = 'FAILURE'
    
    // def msg = [ subject: 'failed', body: "ERROR: ${err}", channel: 'jenkins-dev-tests' ]
    // senseislack.post_failure(msg)
  }
}


///////////////////////////////////////

def do_curl(check_URL, warnings) {
    def myscript = "Invoke-WebRequest ${check_URL}/manifest.json | ConvertFrom-Json | Select -ExpandProperty vcs-shaxxx"
    def sha = null
    try {
      sha = powershell(returnStdout: true, script: myscript).trim()
      if (sha = null) {
        warnings << "Missing sha from ${check_URL}/manifest.json"
      }
    }
    catch (err) {
      msg = "Error getting sha from ${check_URL}: ${err}"
      echo msg
      warnings << msg
      echo "Suppressing and continuing"
    }
    return sha
}
